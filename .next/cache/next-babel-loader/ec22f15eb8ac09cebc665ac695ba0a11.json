{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from \"react\";\nimport dynamic from \"next/dynamic\";\nimport Router from \"next/router\";\nimport defaultPage from \"./defaultPage\";\nvar LoginPage = dynamic(function () {\n  return import(\"../pages/login\");\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"../pages/login\")];\n    },\n    modules: [\"../pages/login\"]\n  }\n});\n\nvar securePageHoc = function securePageHoc(Page) {\n  return (/*#__PURE__*/function (_Component) {\n      _inherits(SecurePage, _Component);\n\n      function SecurePage() {\n        _classCallCheck(this, SecurePage);\n\n        return _possibleConstructorReturn(this, _getPrototypeOf(SecurePage).apply(this, arguments));\n      }\n\n      _createClass(SecurePage, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          if (!this.props.isAuthenticated) {\n            Router.replace('/login');\n          }\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var isAuthenticated = this.props.isAuthenticated;\n          return isAuthenticated ? __jsx(Page, this.props) : __jsx(LoginPage, null);\n        }\n      }], [{\n        key: \"getInitialProps\",\n        value: function getInitialProps(ctx) {\n          return Page.getInitialProps && Page.getInitialProps(ctx);\n        }\n      }]);\n\n      return SecurePage;\n    }(Component)\n  );\n};\n\nexport default (function (Page) {\n  return defaultPage(securePageHoc(Page));\n});","map":null,"metadata":{},"sourceType":"module"}