{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport _ from 'lodash';\nimport EmptyState from '../assets/EmptyState';\nimport Bar2 from '../assets/Bar2';\n\nvar Accounts = function Accounts(_ref) {\n  var loading = _ref.loading,\n      error = _ref.error,\n      data = _ref.data;\n  var formatted = null;\n\n  var _useState = useState(false),\n      isEmpty = _useState[0],\n      setIsEmpty = _useState[1];\n\n  var options = {\n    legend: {\n      display: false\n    }\n  };\n  if (loading) return __jsx(\"p\", null, \"Loading...\");\n\n  if (data) {\n    var accounts = _toConsumableArray(data.accounts).filter(function (account) {\n      return account.account_type;\n    });\n\n    if (_.isEmpty(accounts)) {\n      setIsEmpty(true);\n    } else {\n      var grouped = _.countBy(accounts, function (account) {\n        return account.account_type.Name;\n      });\n\n      formatted = {\n        labels: Object.keys(grouped),\n        datasets: [{\n          data: Object.values(grouped),\n          backgroundColor: ['#2680FF', '#FFBD2E', '#00DE89', '#ff7214'],\n          hoverBackgroundColor: ['#2680FF', '#FFBD2E', '#00DE89', '#ff7214']\n        }]\n      };\n    }\n  }\n\n  return __jsx(\"div\", null, __jsx(\"h2\", {\n    className: \"text-lg mb-4 font-bold\"\n  }, \"Cuentas por tipo\"), isEmpty ? __jsx(EmptyState, null, __jsx(Bar2, null)) : __jsx(Bar, {\n    data: formatted,\n    options: options\n  }));\n};\n\nexport default Accounts;","map":null,"metadata":{},"sourceType":"module"}