{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { withData } from \"next-apollo\";\nimport { setContext } from \"apollo-link-context\";\nimport { createUploadLink } from \"apollo-upload-client\";\nimport Cookies from \"js-cookie\";\nvar uploadLink = createUploadLink({\n  uri: \"\".concat(process.env.API_URL || 'http://localhost:1337', \"/graphql\"),\n  headers: {\n    \"keep-alive\": \"true\"\n  }\n});\nvar authLink = setContext(function (_, _ref) {\n  var headers = _ref.headers;\n  var token = Cookies.get(\"jwt\");\n  return {\n    headers: _objectSpread({}, headers, {\n      Authorization: token ? \"Bearer \".concat(token) : \"\"\n    })\n  };\n});\nvar config = {\n  link: authLink.concat(uploadLink)\n};\nexport default withData(config);","map":null,"metadata":{},"sourceType":"module"}