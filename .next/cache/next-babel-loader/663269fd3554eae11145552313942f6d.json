{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { withData } from \"next-apollo\";\nimport { setContext } from \"apollo-link-context\";\nimport { createUploadLink } from \"apollo-upload-client\";\nimport Cookies from \"js-cookie\";\nconst uploadLink = createUploadLink({\n  uri: `${process.env.API_URL || 'http://localhost:1337'}/graphql`,\n  headers: {\n    \"keep-alive\": \"true\"\n  }\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  const token = Cookies.get(\"jwt\");\n  return {\n    headers: _objectSpread({}, headers, {\n      Authorization: token ? `Bearer ${token}` : \"\"\n    })\n  };\n});\nconst config = {\n  link: authLink.concat(uploadLink)\n};\nexport default withData(config);","map":{"version":3,"sources":["/Users/florlafuente/Documents/Workspace/mi-primera-bdd/lib/apollo.js"],"names":["withData","setContext","createUploadLink","Cookies","uploadLink","uri","process","env","API_URL","headers","authLink","_","token","get","Authorization","config","link","concat"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,UAAU,GAAGF,gBAAgB,CAAC;AAClCG,EAAAA,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,OAAZ,IAAuB,uBAAwB,UADrB;AAElCC,EAAAA,OAAO,EAAE;AACP,kBAAc;AADP;AAFyB,CAAD,CAAnC;AAOA,MAAMC,QAAQ,GAAGT,UAAU,CAAC,CAACU,CAAD,EAAI;AAAEF,EAAAA;AAAF,CAAJ,KAAoB;AAC9C,QAAMG,KAAK,GAAGT,OAAO,CAACU,GAAR,CAAY,KAAZ,CAAd;AACA,SAAO;AACLJ,IAAAA,OAAO,oBACFA,OADE;AAELK,MAAAA,aAAa,EAAEF,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AAFtC;AADF,GAAP;AAMD,CAR0B,CAA3B;AAUA,MAAMG,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAEN,QAAQ,CAACO,MAAT,CAAgBb,UAAhB;AADO,CAAf;AAGA,eAAeJ,QAAQ,CAACe,MAAD,CAAvB","sourcesContent":["import { withData } from \"next-apollo\"\nimport { setContext } from \"apollo-link-context\"\nimport { createUploadLink } from \"apollo-upload-client\"\nimport Cookies from \"js-cookie\"\n\nconst uploadLink = createUploadLink({\n  uri: `${process.env.API_URL || 'http://localhost:1337'}/graphql`,\n  headers: {\n    \"keep-alive\": \"true\"\n  }\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = Cookies.get(\"jwt\")\n  return {\n    headers: {\n      ...headers,\n      Authorization: token ? `Bearer ${token}` : \"\"\n    }\n  };\n});\n\nconst config = {\n  link: authLink.concat(uploadLink)\n}\nexport default withData(config)"]},"metadata":{},"sourceType":"module"}